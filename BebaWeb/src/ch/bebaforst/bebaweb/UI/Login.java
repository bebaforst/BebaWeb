package ch.bebaforst.bebaweb.UI;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.Navigator;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class Login extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button loginButton;
	@AutoGenerated
	private TextField textField_1;
	@AutoGenerated
	private PasswordField passwordField_1;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Label label_1;
	Navigator navigator;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @param navigator 
	 */
	
	public Login(Navigator navigator) {
		this.navigator=navigator;
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Willkomen");
		mainLayout.addComponent(label_1, "top:20.0px;left:20.0px;");
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Benutzername");
		mainLayout.addComponent(label_2, "top:60.0px;left:20.0px;");
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Passwort");
		mainLayout.addComponent(label_3, "top:142.0px;left:20.0px;");
		
		// passwordField_1
		passwordField_1 = new PasswordField();
		passwordField_1.setImmediate(false);
		passwordField_1.setWidth("-1px");
		passwordField_1.setHeight("-1px");
		mainLayout.addComponent(passwordField_1, "top:176.0px;left:20.0px;");
		
		// textField_1
		textField_1 = new TextField();
		textField_1.setImmediate(false);
		textField_1.setWidth("-1px");
		textField_1.setHeight("-1px");
		mainLayout.addComponent(textField_1, "top:96.0px;left:20.0px;");
		
		// button_1
		loginButton = new Button();
		loginButton.setCaption("Login");
		loginButton.setImmediate(false);
		loginButton.setWidth("174px");
		loginButton.setHeight("26px");
		loginButton.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				if (textField_1.getValue().equals("Beni")&& passwordField_1.getValue().equals("Hello")) {
					navigator.navigateTo("main");
				}
			
			}
		});
		
		mainLayout.addComponent(loginButton, "top:234.0px;left:20.0px;");
		
		return mainLayout;
	}

	@Override
	public void enter(ViewChangeEvent event) {
		Notification.show("enter in the Gugus");
		
	}



}
